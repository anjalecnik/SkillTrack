import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialMigration1747152386373 implements MigrationInterface {
    name = 'InitialMigration1747152386373'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "team" ("id" SERIAL NOT NULL, "name" character varying(150) NOT NULL, "description" character varying(150) NOT NULL, "createdBy" character varying(255), "modifiedBy" character varying(255), "createDate" TIMESTAMP NOT NULL DEFAULT now(), "updateDate" TIMESTAMP NOT NULL DEFAULT now(), "deleteDate" TIMESTAMP, CONSTRAINT "PK_f57d8293406df4af348402e4b74" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "project_jt_user" ("id" SERIAL NOT NULL, "role" character varying(32) NOT NULL, "assignedPercentage" integer NOT NULL DEFAULT '100', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "projectId" integer NOT NULL, "userId" integer NOT NULL, CONSTRAINT "PK_f113404e5419cc3bb0e7c343def" PRIMARY KEY ("id")); COMMENT ON COLUMN "project_jt_user"."projectId" IS 'Quick reference to project'; COMMENT ON COLUMN "project_jt_user"."userId" IS 'Quick reference to user'`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_1e0932d701e538d13c92123e33" ON "project_jt_user" ("projectId", "userId") WHERE "deletedAt" IS NULL`);
        await queryRunner.query(`CREATE TABLE "notification" ("id" SERIAL NOT NULL, "sendSchedule" character varying(256), "scheduledJobName" character varying(256), "status" character varying(32) NOT NULL DEFAULT 'Pending', "type" character varying(32) NOT NULL, "errorMessage" character varying(1024), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" integer, "userActivityRequestId" integer, CONSTRAINT "PK_705b6c7cdf9b2c2ff7ac7872cb7" PRIMARY KEY ("id")); COMMENT ON COLUMN "notification"."sendSchedule" IS 'Cronjob expression. If empty, process immediately'; COMMENT ON COLUMN "notification"."scheduledJobName" IS 'Used only for cron jobs'; COMMENT ON COLUMN "notification"."userId" IS 'Quick reference to the user'; COMMENT ON COLUMN "notification"."userActivityRequestId" IS 'Quick reference to the user activity request'`);
        await queryRunner.query(`CREATE TABLE "user_activity_request" ("id" SERIAL NOT NULL, "status" character varying(32) NOT NULL DEFAULT 'PendingApproval', "activityType" character varying(32) NOT NULL, "description" character varying(1024), "hours" integer, "dateStart" TIMESTAMP NOT NULL, "dateEnd" TIMESTAMP, "location" character varying(256), "distanceInKM" integer, "valueInEuro" numeric(10,2), "isPaidWithCompanyCard" boolean, "fileUrl" character varying(2048), "fileName" character varying(128), "userId" integer NOT NULL, "reportedByUserId" integer NOT NULL, "reviewedByUserId" integer, "projectId" integer, "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_36f2fe5c99f514bf22131cae31b" PRIMARY KEY ("id")); COMMENT ON COLUMN "user_activity_request"."description" IS 'Description of activity'; COMMENT ON COLUMN "user_activity_request"."hours" IS 'Hours worked. Used for Daily, Overtime, BusinessTrip, OnCall'; COMMENT ON COLUMN "user_activity_request"."dateStart" IS 'Start date of activity'; COMMENT ON COLUMN "user_activity_request"."dateEnd" IS 'End date of activity'; COMMENT ON COLUMN "user_activity_request"."location" IS 'Location of activity'; COMMENT ON COLUMN "user_activity_request"."distanceInKM" IS 'Distance of businessT trip'; COMMENT ON COLUMN "user_activity_request"."valueInEuro" IS 'Value of expense in Eur'; COMMENT ON COLUMN "user_activity_request"."isPaidWithCompanyCard" IS 'Is paid with company card flag'; COMMENT ON COLUMN "user_activity_request"."fileUrl" IS 'Url to uploaded image'; COMMENT ON COLUMN "user_activity_request"."fileName" IS 'File name'; COMMENT ON COLUMN "user_activity_request"."userId" IS 'Quick reference to user'; COMMENT ON COLUMN "user_activity_request"."reportedByUserId" IS 'Quick reference to reporter'; COMMENT ON COLUMN "user_activity_request"."reviewedByUserId" IS 'Quick reference to reviewer'; COMMENT ON COLUMN "user_activity_request"."projectId" IS 'Quick reference to project'`);
        await queryRunner.query(`CREATE TABLE "project" ("id" SERIAL NOT NULL, "name" character varying(64) NOT NULL, "type" character varying(32), "dateStart" TIMESTAMP NOT NULL, "dateEnd" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "createdByUserId" integer NOT NULL, "updatedByUserId" integer NOT NULL, "deletedByUserId" integer, CONSTRAINT "PK_4d68b1358bb5b766d3e78f32f57" PRIMARY KEY ("id")); COMMENT ON COLUMN "project"."createdByUserId" IS 'Quick reference to the user who created project'; COMMENT ON COLUMN "project"."updatedByUserId" IS 'Quick reference to the user who updated project'; COMMENT ON COLUMN "project"."deletedByUserId" IS 'Quick reference to the user who deleted project'`);
        await queryRunner.query(`CREATE TABLE "user_working_hours" ("id" SERIAL NOT NULL, "type" character varying(32) NOT NULL, "fromDateStart" TIMESTAMP NOT NULL, "toDateEnd" TIMESTAMP, "userId" integer NOT NULL, CONSTRAINT "PK_178e08d220f415a31da6f37573f" PRIMARY KEY ("id")); COMMENT ON COLUMN "user_working_hours"."userId" IS 'Quick reference to the user'`);
        await queryRunner.query(`CREATE TABLE "user_vacation_assigned" ("id" SERIAL NOT NULL, "year" integer NOT NULL, "assignedDays" integer, "description" character varying(128), "oldVacationExpiration" character varying(5), "initialUsedDays" integer, "initialDate" date, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" integer NOT NULL, "createdByUserId" integer, "updatedByUserId" integer, "updatedByWorkspaceUserId" integer, CONSTRAINT "UQ_c0bb8f052cf6e1cde00f815cefb" UNIQUE ("userId", "year"), CONSTRAINT "PK_c82cc42a26abfd12ae4383ce2e2" PRIMARY KEY ("id")); COMMENT ON COLUMN "user_vacation_assigned"."assignedDays" IS 'Assigned vacation days for the year'; COMMENT ON COLUMN "user_vacation_assigned"."description" IS 'Description for assigned vacation'; COMMENT ON COLUMN "user_vacation_assigned"."oldVacationExpiration" IS 'Expiration date of old vacation in MM-DD format'; COMMENT ON COLUMN "user_vacation_assigned"."initialUsedDays" IS 'Used vacation days for the year. If not null this property flags assigned vacation as initial'; COMMENT ON COLUMN "user_vacation_assigned"."userId" IS 'Quick reference to the user'; COMMENT ON COLUMN "user_vacation_assigned"."createdByUserId" IS 'Quick reference to the user who created assigned Vacation'; COMMENT ON COLUMN "user_vacation_assigned"."updatedByUserId" IS 'Quick reference to the user who updated assigned Vacation'`);
        await queryRunner.query(`CREATE TABLE "user_performance_review" ("id" SERIAL NOT NULL, "answer1" integer NOT NULL, "answer2" integer NOT NULL, "answer3" boolean NOT NULL, "answer4" boolean NOT NULL, "quartal" character varying(16) NOT NULL, "year" integer NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "userId" integer NOT NULL, CONSTRAINT "PK_9711ffe184172a5bccd09adbde6" PRIMARY KEY ("id")); COMMENT ON COLUMN "user_performance_review"."userId" IS 'Quick reference to the user'`);
        await queryRunner.query(`CREATE TABLE "user_activity" ("id" SERIAL NOT NULL, "activityType" character varying(32) NOT NULL, "status" character varying(32) NOT NULL, "date" TIMESTAMP NOT NULL, "hours" integer, "workLocation" character varying(32), "userId" integer NOT NULL, "reportedByUserId" integer NOT NULL, "reviewedByUserId" integer, "projectId" integer, "activityRequestId" integer, "workingHoursId" integer, "businessTripId" integer, "vacationId" integer, "expenseId" integer, "sickLeaveId" integer, "schoolScheduleId" integer, "overtimeId" integer, "onCallId" integer, "specialLeaveId" integer, "vacationAssignedId" integer, "performanceReviewId" integer, "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "REL_97a38f156a7cc04b404c3bc4c2" UNIQUE ("workingHoursId"), CONSTRAINT "PK_daec6d19443689bda7d7785dff5" PRIMARY KEY ("id")); COMMENT ON COLUMN "user_activity"."hours" IS 'Hours worked. Used for Daily, Overtime, BusinessTrip, OnCall'; COMMENT ON COLUMN "user_activity"."userId" IS 'Quick reference to the user'; COMMENT ON COLUMN "user_activity"."reportedByUserId" IS 'Quick reference to the reporter'; COMMENT ON COLUMN "user_activity"."reviewedByUserId" IS 'Quick reference to the reviewer'; COMMENT ON COLUMN "user_activity"."projectId" IS 'Quick reference to the project'; COMMENT ON COLUMN "user_activity"."activityRequestId" IS 'Quick reference to activity request'; COMMENT ON COLUMN "user_activity"."workingHoursId" IS 'Quick reference to user working hours'; COMMENT ON COLUMN "user_activity"."businessTripId" IS 'Quick reference to business trip'; COMMENT ON COLUMN "user_activity"."vacationId" IS 'Quick reference to vacation'; COMMENT ON COLUMN "user_activity"."expenseId" IS 'Quick reference to expense'; COMMENT ON COLUMN "user_activity"."sickLeaveId" IS 'Quick reference to sick leave'; COMMENT ON COLUMN "user_activity"."schoolScheduleId" IS 'Quick reference to sick leave'; COMMENT ON COLUMN "user_activity"."overtimeId" IS 'Quick reference to overtime'; COMMENT ON COLUMN "user_activity"."onCallId" IS 'Quick reference to on call'; COMMENT ON COLUMN "user_activity"."specialLeaveId" IS 'Quick reference to special leave'; COMMENT ON COLUMN "user_activity"."vacationAssignedId" IS 'Quick reference to the user assigned vacations'; COMMENT ON COLUMN "user_activity"."performanceReviewId" IS 'Quick reference to performance review'`);
        await queryRunner.query(`CREATE TABLE "user_address" ("id" SERIAL NOT NULL, "streetAddress" character varying(256) NOT NULL, "city" character varying(128) NOT NULL, "state" character varying(128), "postalCode" character varying(16), "countryCode" character(2) NOT NULL, "type" character varying(16) NOT NULL DEFAULT 'Main', "userId" integer NOT NULL, "createdByUserId" integer NOT NULL, "updatedByUserId" integer NOT NULL, "deletedByUserId" integer, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, CONSTRAINT "PK_302d96673413455481d5ff4022a" PRIMARY KEY ("id")); COMMENT ON COLUMN "user_address"."userId" IS 'Quick reference to user'; COMMENT ON COLUMN "user_address"."createdByUserId" IS 'Quick reference to the user who created user address'; COMMENT ON COLUMN "user_address"."updatedByUserId" IS 'Quick reference to the user who updated user address'; COMMENT ON COLUMN "user_address"."deletedByUserId" IS 'Quick reference to the user who deleted user address'`);
        await queryRunner.query(`CREATE TABLE "user" ("id" SERIAL NOT NULL, "email" character varying(256) NOT NULL, "password" character varying(512), "status" character varying(16) NOT NULL, "role" character varying(16) NOT NULL DEFAULT 'User', "name" character varying(128) NOT NULL, "surname" character varying(128) NOT NULL, "birthDate" TIMESTAMP, "phone" character varying(16), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "teamId" integer, "workPositionId" integer, "managerId" integer, "invitedByUserId" integer, "updatedByUserId" integer, "deletedByUserId" integer, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "user_uq" UNIQUE ("email"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id")); COMMENT ON COLUMN "user"."teamId" IS 'Quick reference to the team'; COMMENT ON COLUMN "user"."workPositionId" IS 'Quick reference to the work position'; COMMENT ON COLUMN "user"."managerId" IS 'Quick reference to the user who is manager'; COMMENT ON COLUMN "user"."invitedByUserId" IS 'Quick reference to the user who invited user'; COMMENT ON COLUMN "user"."updatedByUserId" IS 'Quick reference to the user who updated user'; COMMENT ON COLUMN "user"."deletedByUserId" IS 'Quick reference to the user who deleted user'`);
        await queryRunner.query(`CREATE TABLE "work_position" ("id" SERIAL NOT NULL, "name" character varying(128) NOT NULL, "level" character varying(4) NOT NULL, "description" character varying(256) NOT NULL, "workPositionPromotionId" integer, "createdByUserId" integer NOT NULL, "updatedByUserId" integer NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_07580a360725c9350d07815ce68" UNIQUE ("name", "level"), CONSTRAINT "PK_98f11a644b0d1aea2da13f36dbd" PRIMARY KEY ("id")); COMMENT ON COLUMN "work_position"."workPositionPromotionId" IS 'Quick reference to the work position promotion'; COMMENT ON COLUMN "work_position"."createdByUserId" IS 'Quick reference to the user who created work position'; COMMENT ON COLUMN "work_position"."updatedByUserId" IS 'Quick reference to the user who updated work position'`);
        await queryRunner.query(`CREATE TABLE "holiday" ("id" SERIAL NOT NULL, "name" character varying(128) NOT NULL, "date" date NOT NULL, "countryCode" character varying(2) NOT NULL, "state" character varying(16), "region" character varying(16), "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_159060225cc65ac63b6a244e5e3" UNIQUE ("name", "date", "countryCode", "state", "region"), CONSTRAINT "PK_3e7492c25f80418a7aad0aec053" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "project_jt_user" ADD CONSTRAINT "FK_eec38f532823023acd9980c321d" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project_jt_user" ADD CONSTRAINT "FK_feb0026fcb899b05f497d8733bb" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notification" ADD CONSTRAINT "FK_1ced25315eb974b73391fb1c81b" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notification" ADD CONSTRAINT "FK_0560d4491bd73d3759d3e4f5d7a" FOREIGN KEY ("userActivityRequestId") REFERENCES "user_activity_request"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" ADD CONSTRAINT "FK_1c5a85a6a4040c8d2193201dbaa" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" ADD CONSTRAINT "FK_f2fee9287afd13ffdbd8421d0a1" FOREIGN KEY ("reportedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" ADD CONSTRAINT "FK_7f689d8b619435d903500a6240b" FOREIGN KEY ("reviewedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" ADD CONSTRAINT "FK_fb398e0be7c122ef39a7fef277f" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project" ADD CONSTRAINT "FK_81cfa14e564988a5025c362f513" FOREIGN KEY ("createdByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project" ADD CONSTRAINT "FK_97dcfd25d98a3aac2f5721e4d10" FOREIGN KEY ("updatedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project" ADD CONSTRAINT "FK_ef3d03064fc746c9f1cf84c318e" FOREIGN KEY ("deletedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_working_hours" ADD CONSTRAINT "FK_0f0845a7d7fb0d3f1c82a7706ce" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_vacation_assigned" ADD CONSTRAINT "FK_9abd1fc5c3b7c4ba3dc09d1ef08" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_vacation_assigned" ADD CONSTRAINT "FK_a1fe3ca3b3ffeb219635537ef11" FOREIGN KEY ("createdByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_vacation_assigned" ADD CONSTRAINT "FK_d42534ce9fb096738fbb17e4c84" FOREIGN KEY ("updatedByWorkspaceUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_performance_review" ADD CONSTRAINT "FK_9b91cb4bbf9774c735ecd942cd0" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_c8d8d7cfc6e3433e725339c952b" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_60e045acb0cb7c60173ecb42708" FOREIGN KEY ("reportedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_a00e0c37c1d03b4da85853d0071" FOREIGN KEY ("reviewedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_a097c8002bc12928d0ab1ee41b6" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_0f2805a15c293a074afde2793e8" FOREIGN KEY ("activityRequestId") REFERENCES "user_activity_request"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_97a38f156a7cc04b404c3bc4c2f" FOREIGN KEY ("workingHoursId") REFERENCES "user_working_hours"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_114b4fdf341dccb0ed276c433a1" FOREIGN KEY ("vacationAssignedId") REFERENCES "user_vacation_assigned"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_activity" ADD CONSTRAINT "FK_5feafc3efcedf8e383160c43a2f" FOREIGN KEY ("performanceReviewId") REFERENCES "user_performance_review"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_address" ADD CONSTRAINT "FK_1abd8badc4a127b0f357d9ecbc2" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_address" ADD CONSTRAINT "FK_8c35bd45e787f2c2053b210a0e7" FOREIGN KEY ("createdByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_address" ADD CONSTRAINT "FK_7266e684f2f77c6fa26719a7460" FOREIGN KEY ("updatedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_address" ADD CONSTRAINT "FK_5dbe9aedf77f789bba59c3526bc" FOREIGN KEY ("deletedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_1e89f1fd137dc7fea7242377e25" FOREIGN KEY ("teamId") REFERENCES "team"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_156796648ea632d8aa1799c65b4" FOREIGN KEY ("workPositionId") REFERENCES "work_position"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_df69481de1f438f2082e4d54749" FOREIGN KEY ("managerId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_79e70f077097a14304b7e3532ee" FOREIGN KEY ("invitedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_f9c50080ce4ebec4adfc88e59b0" FOREIGN KEY ("updatedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user" ADD CONSTRAINT "FK_a8b1b213bc399fdf5814d5ed0fc" FOREIGN KEY ("deletedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "work_position" ADD CONSTRAINT "FK_c0a5cb8c928b365247142075007" FOREIGN KEY ("createdByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "work_position" ADD CONSTRAINT "FK_e82b21322228a46d084ba6d1134" FOREIGN KEY ("updatedByUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "work_position" ADD CONSTRAINT "FK_21e071d949c47302f5199f56f2e" FOREIGN KEY ("workPositionPromotionId") REFERENCES "work_position"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "work_position" DROP CONSTRAINT "FK_21e071d949c47302f5199f56f2e"`);
        await queryRunner.query(`ALTER TABLE "work_position" DROP CONSTRAINT "FK_e82b21322228a46d084ba6d1134"`);
        await queryRunner.query(`ALTER TABLE "work_position" DROP CONSTRAINT "FK_c0a5cb8c928b365247142075007"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_a8b1b213bc399fdf5814d5ed0fc"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_f9c50080ce4ebec4adfc88e59b0"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_79e70f077097a14304b7e3532ee"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_df69481de1f438f2082e4d54749"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_156796648ea632d8aa1799c65b4"`);
        await queryRunner.query(`ALTER TABLE "user" DROP CONSTRAINT "FK_1e89f1fd137dc7fea7242377e25"`);
        await queryRunner.query(`ALTER TABLE "user_address" DROP CONSTRAINT "FK_5dbe9aedf77f789bba59c3526bc"`);
        await queryRunner.query(`ALTER TABLE "user_address" DROP CONSTRAINT "FK_7266e684f2f77c6fa26719a7460"`);
        await queryRunner.query(`ALTER TABLE "user_address" DROP CONSTRAINT "FK_8c35bd45e787f2c2053b210a0e7"`);
        await queryRunner.query(`ALTER TABLE "user_address" DROP CONSTRAINT "FK_1abd8badc4a127b0f357d9ecbc2"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_5feafc3efcedf8e383160c43a2f"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_114b4fdf341dccb0ed276c433a1"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_97a38f156a7cc04b404c3bc4c2f"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_0f2805a15c293a074afde2793e8"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_a097c8002bc12928d0ab1ee41b6"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_a00e0c37c1d03b4da85853d0071"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_60e045acb0cb7c60173ecb42708"`);
        await queryRunner.query(`ALTER TABLE "user_activity" DROP CONSTRAINT "FK_c8d8d7cfc6e3433e725339c952b"`);
        await queryRunner.query(`ALTER TABLE "user_performance_review" DROP CONSTRAINT "FK_9b91cb4bbf9774c735ecd942cd0"`);
        await queryRunner.query(`ALTER TABLE "user_vacation_assigned" DROP CONSTRAINT "FK_d42534ce9fb096738fbb17e4c84"`);
        await queryRunner.query(`ALTER TABLE "user_vacation_assigned" DROP CONSTRAINT "FK_a1fe3ca3b3ffeb219635537ef11"`);
        await queryRunner.query(`ALTER TABLE "user_vacation_assigned" DROP CONSTRAINT "FK_9abd1fc5c3b7c4ba3dc09d1ef08"`);
        await queryRunner.query(`ALTER TABLE "user_working_hours" DROP CONSTRAINT "FK_0f0845a7d7fb0d3f1c82a7706ce"`);
        await queryRunner.query(`ALTER TABLE "project" DROP CONSTRAINT "FK_ef3d03064fc746c9f1cf84c318e"`);
        await queryRunner.query(`ALTER TABLE "project" DROP CONSTRAINT "FK_97dcfd25d98a3aac2f5721e4d10"`);
        await queryRunner.query(`ALTER TABLE "project" DROP CONSTRAINT "FK_81cfa14e564988a5025c362f513"`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" DROP CONSTRAINT "FK_fb398e0be7c122ef39a7fef277f"`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" DROP CONSTRAINT "FK_7f689d8b619435d903500a6240b"`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" DROP CONSTRAINT "FK_f2fee9287afd13ffdbd8421d0a1"`);
        await queryRunner.query(`ALTER TABLE "user_activity_request" DROP CONSTRAINT "FK_1c5a85a6a4040c8d2193201dbaa"`);
        await queryRunner.query(`ALTER TABLE "notification" DROP CONSTRAINT "FK_0560d4491bd73d3759d3e4f5d7a"`);
        await queryRunner.query(`ALTER TABLE "notification" DROP CONSTRAINT "FK_1ced25315eb974b73391fb1c81b"`);
        await queryRunner.query(`ALTER TABLE "project_jt_user" DROP CONSTRAINT "FK_feb0026fcb899b05f497d8733bb"`);
        await queryRunner.query(`ALTER TABLE "project_jt_user" DROP CONSTRAINT "FK_eec38f532823023acd9980c321d"`);
        await queryRunner.query(`DROP TABLE "holiday"`);
        await queryRunner.query(`DROP TABLE "work_position"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP TABLE "user_address"`);
        await queryRunner.query(`DROP TABLE "user_activity"`);
        await queryRunner.query(`DROP TABLE "user_performance_review"`);
        await queryRunner.query(`DROP TABLE "user_vacation_assigned"`);
        await queryRunner.query(`DROP TABLE "user_working_hours"`);
        await queryRunner.query(`DROP TABLE "project"`);
        await queryRunner.query(`DROP TABLE "user_activity_request"`);
        await queryRunner.query(`DROP TABLE "notification"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1e0932d701e538d13c92123e33"`);
        await queryRunner.query(`DROP TABLE "project_jt_user"`);
        await queryRunner.query(`DROP TABLE "team"`);
    }

}
